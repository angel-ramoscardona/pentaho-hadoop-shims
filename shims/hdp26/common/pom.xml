<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.pentaho</groupId>
    <artifactId>pentaho-hadoop-shims-hdp26-reactor</artifactId>
    <version>9.0.0.0-SNAPSHOT</version>
  </parent>
  <artifactId>pentaho-hadoop-shims-hdp26-common</artifactId>
  <version>9.0.0.0-SNAPSHOT</version>
  <packaging>bundle</packaging>
  <dependencies>
    <dependency>
      <groupId>org.xerial.snappy</groupId>
      <artifactId>snappy-java</artifactId>
      <version>${org.xerial.snappy.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-client</artifactId>
      <version>${org.apache.hadoop.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>jline</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-mapreduce-client-core</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-mapreduce-client-app</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-mapreduce-client-common</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-mapreduce-client-jobclient</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-mapreduce-client-shuffle</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-annotations</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-yarn-api</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-yarn-common</artifactId>
      <version>${org.apache.hadoop.version}</version>
      <exclusions>
        <!-- exclude not to conflict with default folder -->
        <exclusion>
          <groupId>javax.xml.stream</groupId>
          <artifactId>stax-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-yarn-server-applicationhistoryservice</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-yarn-server-common</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-yarn-server-resourcemanager</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-yarn-server-web-proxy</artifactId>
      <version>${org.apache.hadoop.version}</version>
    </dependency>
    <!--
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-client</artifactId>
      <version>${org.apache.hadoop.version}</version>
      <exclusions>
        <exclusion>
          <groupId>asm</groupId>
          <artifactId>asm</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.google.code.findbugs</groupId>
          <artifactId>jsr305</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.thoughtworks.paranamer</groupId>
          <artifactId>paranamer</artifactId>
        </exclusion>

        <exclusion>
          <groupId>commons-codec</groupId>
          <artifactId>commons-codec</artifactId>
        </exclusion>
        <exclusion>
          <groupId>commons-lang</groupId>
          <artifactId>commons-lang</artifactId>
        </exclusion>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-cli</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.netty</groupId>
          <artifactId>netty</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.activation</groupId>
          <artifactId>activation</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.servlet</groupId>
          <artifactId>servlet-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>jline</groupId>
          <artifactId>jline</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.avro</groupId>
          <artifactId>avro</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.commons</groupId>
          <artifactId>commons-compress</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.curator</groupId>
          <artifactId>curator-client</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.curator</groupId>
          <artifactId>curator-framework</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.curator</groupId>
          <artifactId>curator-recipes</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.httpcomponents</groupId>
          <artifactId>httpclient</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.httpcomponents</groupId>
          <artifactId>httpcore</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.codehaus.jackson</groupId>
          <artifactId>jackson-core-asl</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.codehaus.jackson</groupId>
          <artifactId>jackson-mapper-asl</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.tukaani</groupId>
          <artifactId>xz</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.xerial.snappy</groupId>
          <artifactId>snappy-java</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    -->
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-hadoop-shims-common-hadoop-shim</artifactId>
      <version>${project.version}</version>
      <classifier>sources</classifier>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-hadoop-shims-common-shim</artifactId>
      <version>${project.version}</version>
      <classifier>sources</classifier>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-hdfs-vfs</artifactId>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-big-data-impl-shim-hdfs</artifactId>
      <version>${project.version}</version>
      <classifier>sources</classifier>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-hadoop-shims-common-mapred</artifactId>
      <version>${project.version}</version>
      <classifier>sources</classifier>
    </dependency>

    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>common-sqoop-shim</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-big-data-impl-shim-sqoop</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-big-data-impl-shim-mapreduce</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>common-pig-shim</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-big-data-impl-shim-pig</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>common-format-shim</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-big-data-impl-shim-format</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.orc</groupId>
      <artifactId>orc-core</artifactId>
      <version>${org.apache.orc.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.avro</groupId>
      <artifactId>avro</artifactId>
      <version>${org.apache.avro.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.parquet</groupId>
      <artifactId>parquet-hadoop-bundle</artifactId>
      <version>${parquet.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.sqoop</groupId>
      <artifactId>sqoop</artifactId>
      <version>${sqoop.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.apache.pig</groupId>
      <artifactId>pig</artifactId>
      <version>${pig.version}</version>
      <classifier>${dependency.pig.classifier}</classifier>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
<!-- The following added for Pig -->
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr-runtime</artifactId>
      <version>${org.antlr.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>dk.brics.automaton</groupId>
      <artifactId>automaton</artifactId>
      <version>${automaton.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>${joda-time.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!--- End dependencies for Pig -->

    <dependency>
      <groupId>org.pentaho.di.plugins</groupId>
      <artifactId>kettle-log4j-core</artifactId>
      <version>${pdi.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.thoughtworks.xstream</groupId>
      <artifactId>xstream</artifactId>
      <version>1.4.9</version>
      <scope>provided</scope>
    </dependency>

    <!-- Oozie dependencies -->
    <!-- Removes jsp-api-2.1.jar -->
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-big-data-impl-shim-oozie</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.oozie</groupId>
      <artifactId>oozie-client</artifactId>
      <version>${org.apache.oozie.version}</version>
    </dependency>

    <!-- Adds and removes a bunch of stuff -->
    <dependency>
      <groupId>org.apache.oozie</groupId>
      <artifactId>oozie-core</artifactId>
      <version>${org.apache.oozie.version}</version>
    </dependency>

    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-hadoop-shims-api</artifactId>
      <version>${pentaho-hadoop-shims-api.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-big-data-api-oozie</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-big-data-api-cluster-service-locator</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <!-- End of Oozie dependencies -->

    <!-- Hive dependencies -->
    <!--
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-hadoop-shims-api</artifactId>
      <version>${project.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    -->
    <!--
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-hadoop-shims-hdp26-common</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    -->
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-big-data-impl-shim-hive</artifactId>
      <version>9.0.0.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-serde</artifactId>
      <version>${org.apache.hive.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-common</artifactId>
      <version>${org.apache.hive.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-service</artifactId>
      <version>${org.apache.hive.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-exec</artifactId>
      <version>${org.apache.hive.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-service</artifactId>
      <version>${org.apache.hive.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-storage-api</artifactId>
      <version>${hive-storage-api.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-jdbc</artifactId>
      <version>${org.apache.hive.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-exec</artifactId>
      <version>${org.apache.hive.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-metastore</artifactId>
      <version>${org.apache.hive.version}</version>
    </dependency>
    <!--
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-common</artifactId>
      <version>${org.apache.hadoop.version}</version>
      <scope>provided</scope>
    </dependency>
    -->
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-hdfs</artifactId>
      <version>${org.apache.hadoop.version}</version>
      <scope>provided</scope>
    </dependency>
    <!--
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-mapreduce-client-core</artifactId>
      <version>${org.apache.hadoop.version}</version>
      <scope>provided</scope>
    </dependency>
    -->
    <!-- End of Hive dependencies -->

    <!-- Hbase dependencies -->
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <version>${protobuf-java.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.yammer.metrics</groupId>
      <artifactId>metrics-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-server</artifactId>
      <version>${org.apache.hbase.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-client</artifactId>
      <version>${org.apache.hbase.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-prefix-tree</artifactId>
      <version>${org.apache.hbase.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-protocol</artifactId>
      <version>${org.apache.hbase.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-common</artifactId>
      <version>${org.apache.hbase.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-hadoop-compat</artifactId>
      <version>${org.apache.hbase.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.cloudera.htrace</groupId>
      <artifactId>htrace-core</artifactId>
      <version>${htrace-core.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.zookeeper</groupId>
      <artifactId>zookeeper</artifactId>
      <version>${zookeeper.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-big-data-impl-shim-hbase</artifactId>
      <version>${project.version}</version>
    </dependency>
    <!-- End of Hbase dependencies -->


  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-common-sources</id>
            <phase>process-sources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-hadoop-shims-common-shim</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-hadoop-shims-common-hadoop-shim</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-hadoop-shims-common-mapred</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-big-data-impl-shim-hdfs</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>common-sqoop-shim</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-big-data-impl-shim-sqoop</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-big-data-impl-shim-mapreduce</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>common-pig-shim</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-big-data-impl-shim-pig</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>

                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>common-format-shim</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-big-data-impl-shim-format</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>

                <!-- Oozie artifact -->
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-big-data-impl-shim-oozie</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <!-- End of Oozie artifact -->

                <!-- Hive artifact -->
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-hadoop-shims-common-shim</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-big-data-impl-shim-hive</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <!-- End of Hive artifact -->

                <!-- Hbase artifact -->
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-hadoop-shims-common-hbase</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-big-data-impl-shim-hbase</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <!-- End of Hbase artifact -->

              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-dependencies</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <markersDirectory>${project.build.directory}/dependencies/dependency-maven-plugin-markers
              </markersDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>pentaho</groupId>
                  <artifactId>pentaho-hdfs-vfs</artifactId>
                  <version>9.0.0.0-SNAPSHOT</version>
                  <type>jar</type>
                  <outputDirectory>${project.build.directory}/dependencies/hadoop-common</outputDirectory>
                  <includes>META-INF/vfs-providers.xml</includes>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.pentaho</groupId>
        <artifactId>shim-bundle-plugin</artifactId>
        <version>${shim-bundle-plugin.version}</version>
        <configuration>
          <resolverFilters>
            <resolverFilter>
              <include>
                *:*mapreduce*,*:hadoop-hdfs*,*hadoop-annotation*,*:hadoop-yarn*,*:hadoop-client*,*:commons-cli
              </include>
              <exclude>*:*tests*,*:*xerces*,*:*xml*,*:pentaho-big-data-api*,*:*log4j*,*:*slf4j*</exclude>
              <transitive>true</transitive>
            </resolverFilter>
            <resolverFilter>
              <include>*:*protobuf-java,*:*metrics*,*:*pentaho-hdfs-vfs,*:sqoop,
                <!-- Needed for Pig -->
                *:antlr-runtime,*:automaton,*:pig,*:joda-time,
                <!-- Needed for Formats -->
                *:parquet*,*:avro,*:orc*,*:protobuf*,*:aircompressor,*:snappy*,
                <!-- Needed for Oozie -->
                *:oozie*,
                <!-- Needed for Hive -->
                *:hive-*,*:automaton,
                <!-- Needed for Sqoop/hbase -->
                *:hbase*,*:*htrace-core,*:*zookeeper*,*:hadoop-auth*,*:netty-all*,com.yammer.metrics:metrics-core*
                <!-- Extra -->
                <!--
                *:apacheds-i18n-2.0.0-M15.jar,
                *:apacheds-kerberos-codec-2.0.0-M15.jar,
                *:api-asn1-api-1.0.0-M20.jar,
                *:api-util-1.0.0-M20.jar,
                *:curator-framework-2.7.1.jar,
                *:curator-recipes-2.7.1.jar,
                *:hadoop-hdfs-2.7.3.2.6.0.3-8.jar,
                *:jcip-annotations-1.0.jar,
                *:jetty-sslengine-6.1.26.hwx.jar,
                *:json-smart-1.1.1.jar,
                *:jsp-api-2.1.jar,
                *:jsr305-3.0.0.jar,
                *:metrics-core-3.0.1.jar,
                *:netty-all-4.0.23.Final.jar,
                *:nimbus-jose-jwt-3.9.jar,
                *:okhttp-2.4.0.jar,
                *:okio-1.4.0.jar
                -->
              </include>
              <exclude>*:*tests*,*:pentaho-big-data-api*</exclude>
              <transitive>false</transitive>
            </resolverFilter>

            <!-- Oozie resolve filter -->
            <!--
            <resolverFilter>
              <include>*:oozie*</include>
              <exclude>*:*tests*</exclude>
              <transitive>false</transitive>
            </resolverFilter>
            -->
            <!-- End of Oozie resolve filter -->

            <!-- Hive resolve filter -->
            <!--
            <resolverFilter>
              <include>
                *:hive-*,*:automaton
              </include>
              <exclude>
                *:*-core
              </exclude>
              <transitive>false</transitive>
            </resolverFilter>
            -->
            <!-- End of Hive resolve filter -->

            <!-- Hbase resolve filter -->
            <!--
            <resolverFilter>
              <include>*:hbase*,*:*htrace-core,*:*zookeeper*,*:hadoop-auth*,*:netty-all*,com.yammer.metrics:metrics-core*</include>
              <exclude>*:*tests*</exclude>
              <transitive>false</transitive>
            </resolverFilter>
            -->
            <!-- End of Hbase resolve filter -->

          </resolverFilters>
        </configuration>
        <executions>
          <execution>
            <phase>prepare-package</phase>
            <goals>
              <goal>resolve</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.igormaznitsa</groupId>
        <artifactId>jcp</artifactId>
        <version>${com.igormaznitsa.jcp.version}</version>
        <executions>
          <execution>
            <id>preprocessSources</id>
            <phase>process-sources</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <globalVars>
            <property>
              <name>shim_type</name>
              <value>${shim.type}</value>
            </property>
            <property>
              <name>shim_name</name>
              <value>${shim.name}</value>
            </property>
          </globalVars>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
            <Bundle-Version>${pentaho-osgi-bundles.version}</Bundle-Version>
            <DynamicImport-Package>*</DynamicImport-Package>
            <Import-Package>
              org.pentaho.hadoop.shim;version=${pentaho-osgi-bundles.version},
              org.pentaho.hadoop.shim.api.*;version=${pentaho-osgi-bundles.version},
              org.pentaho.hadoop.shim.spi.*;version=${pentaho-osgi-bundles.version},
              io.netty.channel;version=${bundle.export.version},
              org.apache.hadoop.conf.*;version=${bundle.export.version}
            </Import-Package>
            <_exportcontents>
              ${bundle.karaf.export.packages}
              <!--
              org.pentaho.big.data.impl.shim.oozie,
              org.apache.hadoop.hive.*;version=${bundle.export.version},
              org.pentaho.hbase.shim.common;version=${bundle.export.version},
              org.apache.hadoop.hbase.*;version=${bundle.export.version}
              -->
            </_exportcontents>
            <Embed-Dependency>*</Embed-Dependency>
          </instructions>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
