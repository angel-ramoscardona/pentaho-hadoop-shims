<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.pentaho</groupId>
    <artifactId>shim</artifactId>
    <version>9.0.0.0-SNAPSHOT</version>
  </parent>
  <artifactId>shim-source</artifactId>
  <version>9.0.0.0-SNAPSHOT</version>
  <packaging>bundle</packaging>
  <properties>
    <shim.name>hdp26</shim.name>
    <shim.type>HDP</shim.type>
    <shim-bundle-plugin.version>1.0</shim-bundle-plugin.version>
    <com.igormaznitsa.jcp.version>6.1.2</com.igormaznitsa.jcp.version>
    <org.apache.hadoop.version>2.7.3.2.6.0.3-8</org.apache.hadoop.version>
    <org.apache.avro.version>1.8.0</org.apache.avro.version>
    <parquet.version>1.8.1</parquet.version>
    <sqoop.version>1.4.6.2.6.0.3-8</sqoop.version>
    <pig.version>0.16.0.2.6.0.3-8</pig.version>
    <dependency.pig.classifier>h2</dependency.pig.classifier>
    <org.apache.hive.version>1.2.1000.2.6.0.3-8</org.apache.hive.version>
    <org.apache.oozie.version>4.2.0.2.6.0.3-8</org.apache.oozie.version>
    <org.apache.hbase.version>1.1.2.2.6.0.3-8</org.apache.hbase.version>
    <org.osgi.core.version>4.3.1</org.osgi.core.version>
    <pentaho-code.version>11.0.0.0</pentaho-code.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.pentaho</groupId>
      <artifactId>pentaho-hadoop-shims-common-hbase-comparators-api</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-common-sources</id>
            <phase>process-sources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-hadoop-shims-common-shim</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-hadoop-shims-common-hadoop-shim</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-hadoop-shims-common-mapred</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-big-data-impl-shim-hdfs</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>common-sqoop-shim</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-big-data-impl-shim-sqoop</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-big-data-impl-shim-mapreduce</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>common-pig-shim</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-big-data-impl-shim-pig</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>

                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>common-format-shim</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-big-data-impl-shim-format</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>

                <!-- Oozie artifact -->
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-big-data-impl-shim-oozie</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <!-- End of Oozie artifact -->

                <!-- Hive artifact -->
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-hadoop-shims-common-shim</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-big-data-impl-shim-hive</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <!-- End of Hive artifact -->

                <!-- Hbase artifact -->
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-hadoop-shims-common-hbase</artifactId>
                  <version>${project.version}</version>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.pentaho</groupId>
                  <artifactId>pentaho-big-data-impl-shim-hbase</artifactId>
                  <classifier>sources</classifier>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/src</outputDirectory>
                </artifactItem>
                <!-- End of Hbase artifact -->

              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-dependencies</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <markersDirectory>${project.build.directory}/dependencies/dependency-maven-plugin-markers
              </markersDirectory>
              <artifactItems>
                <artifactItem>
                  <groupId>pentaho</groupId>
                  <artifactId>pentaho-hdfs-vfs</artifactId>
                  <version>9.0.0.0-SNAPSHOT</version>
                  <type>jar</type>
                  <outputDirectory>${project.build.directory}/dependencies/hadoop-common</outputDirectory>
                  <includes>META-INF/vfs-providers.xml</includes>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/src</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>add-resource</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>add-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>${project.build.directory}/src/META-INF</directory>
                  <targetPath>META-INF</targetPath>
                </resource>
                <resource>
                  <directory>${project.build.directory}/src</directory>
                  <includes>
                    <include>**/*.properties</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>add-integration-test-resource</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>add-test-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>${project.build.directory}/test-src</directory>
                  <targetPath>${project.build.directory}/it-classes</targetPath>
                  <includes>
                    <include>**/*</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>add-test-resource</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>add-test-resource</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>${project.build.directory}/test-src</directory>
                  <includes>
                    <include>**/*</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>add-test-source</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/test-src</source>
              </sources>
            </configuration>
          </execution>
        </executions>
        <inherited>true</inherited>
      </plugin>
      <plugin>
        <groupId>com.pentaho</groupId>
        <artifactId>shim-bundle-plugin</artifactId>
        <version>${shim-bundle-plugin.version}</version>
        <configuration>
          <resolverFilters>
            <!--
            <resolverFilter>
              <include>
                *:aws-java-sdk-core,*:jackson-core,*:xstream,*:guava,*:httpclient,
                *:commons-vfs2
              </include>
              <exclude>
                *:*log4j*,*:xml-apis,*:xercesImpl
              </exclude>
              <transitive>true</transitive>
            </resolverFilter>
            -->
            <!--
            <resolverFilter>
              <include>
                *:pig
              </include>
              <transitive>false</transitive>
            </resolverFilter>
            -->
          </resolverFilters>
        </configuration>
        <executions>
          <execution>
            <phase>prepare-package</phase>
            <goals>
              <goal>resolve</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.igormaznitsa</groupId>
        <artifactId>jcp</artifactId>
        <version>${com.igormaznitsa.jcp.version}</version>
        <executions>
          <execution>
            <id>preprocessSources</id>
            <phase>process-sources</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <globalVars>
            <property>
              <name>shim_type</name>
              <value>${shim.type}</value>
            </property>
            <property>
              <name>shim_name</name>
              <value>${shim.name}</value>
            </property>
          </globalVars>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
            <Bundle-Version>${pentaho-osgi-bundles.version}</Bundle-Version>
            <Fragment-Host>pentaho-hadoop-shims-hdp26-blueprint</Fragment-Host>
            <Pentaho-Code-Version>${pentaho-code.version}</Pentaho-Code-Version>
            <!--<DynamicImport-Package>*</DynamicImport-Package>-->
            <Import-Package>
            </Import-Package>
            <_exportcontents>
            </_exportcontents>
            <Embed-Dependency>*</Embed-Dependency>
          </instructions>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
